services:
  master:
    build:
      context: .
      dockerfile: master/Dockerfile
    container_name: master
    ports:
      - "9000:9000"
    volumes:
      - ./output:/app/output
      - ./log/log_master:/app/log/log_master
      - ./state:/app/state  
    environment:
      - ENABLE_S3=${ENABLE_S3}
      - S3_BUCKET=${S3_BUCKET}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_SESSION_TOKEN=${AWS_SESSION_TOKEN}
    networks:
      - mapreduce-net

  mapper:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      - ROLE=mapper
      - PORT=9001
      - MASTER_ADDR=master:9000
    depends_on:
      - master
    volumes:
      - ./output:/app/output
      - ./log/log_worker:/app/log/log_worker
    networks:
      - mapreduce-net

  reducer:
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      - ROLE=reducer
      - PORT=9001
      - MASTER_ADDR=master:9000
    depends_on:
      - master
    volumes:
      - ./output:/app/output
      - ./log/log_worker:/app/log/log_worker
    networks:
      - mapreduce-net

  standby:
    build:
      context: .
      dockerfile: standby/Dockerfile
    container_name: standby_master
    depends_on:
      - master
    volumes:
      - ./state:/app/state
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - mapreduce-net


networks:
  mapreduce-net:
    driver: bridge

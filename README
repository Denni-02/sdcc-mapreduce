# SDCC – Fault-Tolerant MapReduce in Go

Progetto per il corso **Sistemi Distribuiti e Cloud Computing (SDCC)**, a.a. 2024/25.

Il progetto implementa un sistema distribuito di ordinamento basato sul paradigma **MapReduce**, scritto in **Go**, con comunicazione via **RPC**, e organizzato in **master**, **mapper** e **reducer**.

---

## Come eseguire il progetto (per ora solo in locale)

### 1. Modifica `config/config.json`

Imposta i parametri del sistema:
- `numMappers`: numero di mapper da avviare
- `numReducers`: numero di reducer da avviare
- `xi`, `xf`: range dei numeri generati (es. da 1 a 50)
- `count`: quantità totale di numeri casuali da generare
- `workers`: lista dei worker, ognuno con:
  - `role`: `"mapper"` o `"reducer"`
  - `address`: es. `"localhost:9001"`

### 2. Inizializza il modulo Go

Se non l'hai già fatto:

```bash
go mod init sdcc-mapreduce
go mod tidy

### 3. Avvia i worker (in terminali separati)

Esegui tanti worker quanti ne hai definiti nel config.json:

```bash
go run worker/main.go --address=localhost:9001
go run worker/main.go --address=localhost:9002
go run worker/main.go --address=localhost:9003
…

### 4. Avvia il master

Nel terminale principale (dalla root del progetto):

```bash
go run ./master

### 5. Verifica output

- I reducer scrivono output parziale in `output/temp_<address>.txt`
- Il master unisce tutto in `output/final_output.txt`

---

## Requisiti

- Go ≥ 1.20
- Ambiente locale (nessun container richiesto per ora)

---

## Autore

Mariani Dennis
Università di Roma Tor Vergata
Corso Sistemi Distribuiti e Cloud – A.A. 2024/25


